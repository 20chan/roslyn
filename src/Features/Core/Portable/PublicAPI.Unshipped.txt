*REMOVED*static Microsoft.CodeAnalysis.Completion.CompletionItem.Create(string displayText, string filterText = null, string sortText = null, System.Collections.Immutable.ImmutableDictionary<string, string> properties = null, System.Collections.Immutable.ImmutableArray<string> tags = default(System.Collections.Immutable.ImmutableArray<string>), Microsoft.CodeAnalysis.Completion.CompletionItemRules rules = null) -> Microsoft.CodeAnalysis.Completion.CompletionItem
Microsoft.CodeAnalysis.Completion.CompletionItem.DisplayTextPrefix.get -> string
Microsoft.CodeAnalysis.Completion.CompletionItem.DisplayTextSuffix.get -> string
Microsoft.CodeAnalysis.Completion.CompletionItem.InlineDescription.get -> string
Microsoft.CodeAnalysis.Completion.CompletionItem.WithDisplayTextPrefix(string displayTextPrefix) -> Microsoft.CodeAnalysis.Completion.CompletionItem
Microsoft.CodeAnalysis.Completion.CompletionItem.WithDisplayTextSuffix(string displayTextSuffix) -> Microsoft.CodeAnalysis.Completion.CompletionItem
Microsoft.CodeAnalysis.FindUsages.SourceReferenceItem.ReferenceInfo.get -> System.Collections.Immutable.ImmutableDictionary<string, System.Collections.Immutable.ImmutableArray<string>>
Microsoft.CodeAnalysis.FindUsages.SourceReferenceItem.SourceReferenceItem(Microsoft.CodeAnalysis.FindUsages.DefinitionItem definition, Microsoft.CodeAnalysis.DocumentSpan sourceSpan, System.Collections.Immutable.ImmutableDictionary<string, System.Collections.Immutable.ImmutableArray<string>> referenceInfo) -> void
Microsoft.CodeAnalysis.Glyph.TargetTypeMatch = 75 -> Microsoft.CodeAnalysis.Glyph
Microsoft.CodeAnalysis.Structure.BlockSpan
Microsoft.CodeAnalysis.Structure.BlockSpan.AutoCollapse.get -> bool
Microsoft.CodeAnalysis.Structure.BlockSpan.BannerText.get -> string
Microsoft.CodeAnalysis.Structure.BlockSpan.BlockSpan(string type, bool isCollapsible, Microsoft.CodeAnalysis.Text.TextSpan textSpan, Microsoft.CodeAnalysis.Text.TextSpan hintSpan, string bannerText = "...", bool autoCollapse = false, bool isDefaultCollapsed = false) -> void
Microsoft.CodeAnalysis.Structure.BlockSpan.BlockSpan(string type, bool isCollapsible, Microsoft.CodeAnalysis.Text.TextSpan textSpan, string bannerText = "...", bool autoCollapse = false, bool isDefaultCollapsed = false) -> void
Microsoft.CodeAnalysis.Structure.BlockSpan.HintSpan.get -> Microsoft.CodeAnalysis.Text.TextSpan
Microsoft.CodeAnalysis.Structure.BlockSpan.IsCollapsible.get -> bool
Microsoft.CodeAnalysis.Structure.BlockSpan.IsDefaultCollapsed.get -> bool
Microsoft.CodeAnalysis.Structure.BlockSpan.TextSpan.get -> Microsoft.CodeAnalysis.Text.TextSpan
Microsoft.CodeAnalysis.Structure.BlockSpan.Type.get -> string
Microsoft.CodeAnalysis.Structure.BlockStructure
Microsoft.CodeAnalysis.Structure.BlockStructure.BlockStructure(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Structure.BlockSpan> spans) -> void
Microsoft.CodeAnalysis.Structure.BlockStructure.Spans.get -> System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Structure.BlockSpan>
Microsoft.CodeAnalysis.Structure.BlockStructureService
Microsoft.CodeAnalysis.Structure.BlockStructureService.BlockStructureService() -> void
Microsoft.CodeAnalysis.Structure.BlockTypes
abstract Microsoft.CodeAnalysis.Structure.BlockStructureService.GetBlockStructureAsync(Microsoft.CodeAnalysis.Document document, System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.Task<Microsoft.CodeAnalysis.Structure.BlockStructure>
abstract Microsoft.CodeAnalysis.Structure.BlockStructureService.Language.get -> string
const Microsoft.CodeAnalysis.FindUsages.DefinitionItem.DefinitionSymbolKey = "DefinitionSymbolKey" -> string
const Microsoft.CodeAnalysis.Structure.BlockTypes.Comment = "Comment" -> string
const Microsoft.CodeAnalysis.Structure.BlockTypes.Conditional = "Conditional" -> string
const Microsoft.CodeAnalysis.Structure.BlockTypes.Expression = "Expression" -> string
const Microsoft.CodeAnalysis.Structure.BlockTypes.Imports = "Imports" -> string
const Microsoft.CodeAnalysis.Structure.BlockTypes.Loop = "Loop" -> string
const Microsoft.CodeAnalysis.Structure.BlockTypes.Member = "Member" -> string
const Microsoft.CodeAnalysis.Structure.BlockTypes.Namespace = "Namespace" -> string
const Microsoft.CodeAnalysis.Structure.BlockTypes.Nonstructural = "Nonstructural" -> string
const Microsoft.CodeAnalysis.Structure.BlockTypes.PreprocessorRegion = "PreprocessorRegion" -> string
const Microsoft.CodeAnalysis.Structure.BlockTypes.Statement = "Statement" -> string
const Microsoft.CodeAnalysis.Structure.BlockTypes.Type = "Type" -> string
const Microsoft.CodeAnalysis.TextTags.Constant = "Constant" -> string
const Microsoft.CodeAnalysis.TextTags.EnumMember = "EnumMember" -> string
const Microsoft.CodeAnalysis.TextTags.ExtensionMethod = "ExtensionMethod" -> string
override Microsoft.CodeAnalysis.Structure.BlockSpan.ToString() -> string
const Microsoft.CodeAnalysis.QuickInfo.QuickInfoSectionKinds.AnonymousTypes = "AnonymousTypes" -> string
const Microsoft.CodeAnalysis.QuickInfo.QuickInfoSectionKinds.Captures = "Captures" -> string
const Microsoft.CodeAnalysis.QuickInfo.QuickInfoSectionKinds.Description = "Description" -> string
const Microsoft.CodeAnalysis.QuickInfo.QuickInfoSectionKinds.DocumentationComments = "DocumentationComments" -> string
const Microsoft.CodeAnalysis.QuickInfo.QuickInfoSectionKinds.Exception = "Exception" -> string
const Microsoft.CodeAnalysis.QuickInfo.QuickInfoSectionKinds.Text = "Text" -> string
const Microsoft.CodeAnalysis.QuickInfo.QuickInfoSectionKinds.TypeParameters = "TypeParameters" -> string
const Microsoft.CodeAnalysis.QuickInfo.QuickInfoSectionKinds.Usage = "Usage" -> string
Microsoft.CodeAnalysis.DocumentHighlighting.DocumentHighlights
Microsoft.CodeAnalysis.DocumentHighlighting.DocumentHighlights.Document.get -> Microsoft.CodeAnalysis.Document
Microsoft.CodeAnalysis.DocumentHighlighting.DocumentHighlights.DocumentHighlights(Microsoft.CodeAnalysis.Document document, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.DocumentHighlighting.HighlightSpan> highlightSpans) -> void
Microsoft.CodeAnalysis.DocumentHighlighting.DocumentHighlights.HighlightSpans.get -> System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.DocumentHighlighting.HighlightSpan>
Microsoft.CodeAnalysis.DocumentHighlighting.HighlightSpan
Microsoft.CodeAnalysis.DocumentHighlighting.HighlightSpan.HighlightSpan(Microsoft.CodeAnalysis.Text.TextSpan textSpan, Microsoft.CodeAnalysis.DocumentHighlighting.HighlightSpanKind kind) -> void
Microsoft.CodeAnalysis.DocumentHighlighting.HighlightSpan.Kind.get -> Microsoft.CodeAnalysis.DocumentHighlighting.HighlightSpanKind
Microsoft.CodeAnalysis.DocumentHighlighting.HighlightSpan.TextSpan.get -> Microsoft.CodeAnalysis.Text.TextSpan
Microsoft.CodeAnalysis.DocumentHighlighting.HighlightSpanKind
Microsoft.CodeAnalysis.DocumentHighlighting.HighlightSpanKind.Definition = 1 -> Microsoft.CodeAnalysis.DocumentHighlighting.HighlightSpanKind
Microsoft.CodeAnalysis.DocumentHighlighting.HighlightSpanKind.None = 0 -> Microsoft.CodeAnalysis.DocumentHighlighting.HighlightSpanKind
Microsoft.CodeAnalysis.DocumentHighlighting.HighlightSpanKind.Reference = 2 -> Microsoft.CodeAnalysis.DocumentHighlighting.HighlightSpanKind
Microsoft.CodeAnalysis.DocumentHighlighting.HighlightSpanKind.WrittenReference = 3 -> Microsoft.CodeAnalysis.DocumentHighlighting.HighlightSpanKind
Microsoft.CodeAnalysis.DocumentHighlighting.IDocumentHighlightsService
Microsoft.CodeAnalysis.DocumentHighlighting.IDocumentHighlightsService.GetDocumentHighlightsAsync(Microsoft.CodeAnalysis.Document document, int position, System.Collections.Immutable.IImmutableSet<Microsoft.CodeAnalysis.Document> documentsToSearch, System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.Task<System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.DocumentHighlighting.DocumentHighlights>>
Microsoft.CodeAnalysis.DocumentSpan
Microsoft.CodeAnalysis.DocumentSpan.Document.get -> Microsoft.CodeAnalysis.Document
Microsoft.CodeAnalysis.DocumentSpan.DocumentSpan(Microsoft.CodeAnalysis.Document document, Microsoft.CodeAnalysis.Text.TextSpan sourceSpan) -> void
Microsoft.CodeAnalysis.DocumentSpan.DocumentSpan(Microsoft.CodeAnalysis.Document document, Microsoft.CodeAnalysis.Text.TextSpan sourceSpan, System.Collections.Immutable.ImmutableDictionary<string, object> properties) -> void
Microsoft.CodeAnalysis.DocumentSpan.Equals(Microsoft.CodeAnalysis.DocumentSpan obj) -> bool
Microsoft.CodeAnalysis.DocumentSpan.Properties.get -> System.Collections.Immutable.ImmutableDictionary<string, object>
Microsoft.CodeAnalysis.DocumentSpan.SourceSpan.get -> Microsoft.CodeAnalysis.Text.TextSpan
Microsoft.CodeAnalysis.FindUsages.DefinitionItem
Microsoft.CodeAnalysis.FindUsages.DefinitionItem.DefinitionItem(System.Collections.Immutable.ImmutableArray<string> tags, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.TaggedText> displayParts, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.TaggedText> nameDisplayParts, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.TaggedText> originationParts, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.DocumentSpan> sourceSpans, System.Collections.Immutable.ImmutableDictionary<string, string> properties, bool displayIfNoReferences) -> void
Microsoft.CodeAnalysis.FindUsages.DefinitionItem.DisplayIfNoReferences.get -> bool
Microsoft.CodeAnalysis.FindUsages.DefinitionItem.DisplayParts.get -> System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.TaggedText>
Microsoft.CodeAnalysis.FindUsages.DefinitionItem.NameDisplayParts.get -> System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.TaggedText>
Microsoft.CodeAnalysis.FindUsages.DefinitionItem.OriginationParts.get -> System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.TaggedText>
Microsoft.CodeAnalysis.FindUsages.DefinitionItem.Properties.get -> System.Collections.Immutable.ImmutableDictionary<string, string>
Microsoft.CodeAnalysis.FindUsages.DefinitionItem.SourceSpans.get -> System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.DocumentSpan>
Microsoft.CodeAnalysis.FindUsages.DefinitionItem.Tags.get -> System.Collections.Immutable.ImmutableArray<string>
Microsoft.CodeAnalysis.FindUsages.SourceReferenceItem
Microsoft.CodeAnalysis.FindUsages.SourceReferenceItem.Definition.get -> Microsoft.CodeAnalysis.FindUsages.DefinitionItem
Microsoft.CodeAnalysis.FindUsages.SourceReferenceItem.IsWrittenTo.get -> bool
Microsoft.CodeAnalysis.FindUsages.SourceReferenceItem.SourceReferenceItem(Microsoft.CodeAnalysis.FindUsages.DefinitionItem definition, Microsoft.CodeAnalysis.DocumentSpan sourceSpan, bool isWrittenTo) -> void
Microsoft.CodeAnalysis.FindUsages.SourceReferenceItem.SourceSpan.get -> Microsoft.CodeAnalysis.DocumentSpan
Microsoft.CodeAnalysis.Glyph
Microsoft.CodeAnalysis.Glyph.AddReference = 73 -> Microsoft.CodeAnalysis.Glyph
Microsoft.CodeAnalysis.Glyph.Assembly = 1 -> Microsoft.CodeAnalysis.Glyph
Microsoft.CodeAnalysis.Glyph.BasicFile = 2 -> Microsoft.CodeAnalysis.Glyph
Microsoft.CodeAnalysis.Glyph.BasicProject = 3 -> Microsoft.CodeAnalysis.Glyph
Microsoft.CodeAnalysis.Glyph.CSharpFile = 8 -> Microsoft.CodeAnalysis.Glyph
Microsoft.CodeAnalysis.Glyph.CSharpProject = 9 -> Microsoft.CodeAnalysis.Glyph
Microsoft.CodeAnalysis.Glyph.ClassInternal = 7 -> Microsoft.CodeAnalysis.Glyph
Microsoft.CodeAnalysis.Glyph.ClassPrivate = 6 -> Microsoft.CodeAnalysis.Glyph
Microsoft.CodeAnalysis.Glyph.ClassProtected = 5 -> Microsoft.CodeAnalysis.Glyph
Microsoft.CodeAnalysis.Glyph.ClassPublic = 4 -> Microsoft.CodeAnalysis.Glyph
Microsoft.CodeAnalysis.Glyph.CompletionWarning = 72 -> Microsoft.CodeAnalysis.Glyph
Microsoft.CodeAnalysis.Glyph.ConstantInternal = 13 -> Microsoft.CodeAnalysis.Glyph
Microsoft.CodeAnalysis.Glyph.ConstantPrivate = 12 -> Microsoft.CodeAnalysis.Glyph
Microsoft.CodeAnalysis.Glyph.ConstantProtected = 11 -> Microsoft.CodeAnalysis.Glyph
Microsoft.CodeAnalysis.Glyph.ConstantPublic = 10 -> Microsoft.CodeAnalysis.Glyph
Microsoft.CodeAnalysis.Glyph.DelegateInternal = 17 -> Microsoft.CodeAnalysis.Glyph
Microsoft.CodeAnalysis.Glyph.DelegatePrivate = 16 -> Microsoft.CodeAnalysis.Glyph
Microsoft.CodeAnalysis.Glyph.DelegateProtected = 15 -> Microsoft.CodeAnalysis.Glyph
Microsoft.CodeAnalysis.Glyph.DelegatePublic = 14 -> Microsoft.CodeAnalysis.Glyph
Microsoft.CodeAnalysis.Glyph.EnumInternal = 21 -> Microsoft.CodeAnalysis.Glyph
Microsoft.CodeAnalysis.Glyph.EnumMemberInternal = 25 -> Microsoft.CodeAnalysis.Glyph
Microsoft.CodeAnalysis.Glyph.EnumMemberPrivate = 24 -> Microsoft.CodeAnalysis.Glyph
Microsoft.CodeAnalysis.Glyph.EnumMemberProtected = 23 -> Microsoft.CodeAnalysis.Glyph
Microsoft.CodeAnalysis.Glyph.EnumMemberPublic = 22 -> Microsoft.CodeAnalysis.Glyph
Microsoft.CodeAnalysis.Glyph.EnumPrivate = 20 -> Microsoft.CodeAnalysis.Glyph
Microsoft.CodeAnalysis.Glyph.EnumProtected = 19 -> Microsoft.CodeAnalysis.Glyph
Microsoft.CodeAnalysis.Glyph.EnumPublic = 18 -> Microsoft.CodeAnalysis.Glyph
Microsoft.CodeAnalysis.Glyph.Error = 26 -> Microsoft.CodeAnalysis.Glyph
Microsoft.CodeAnalysis.Glyph.EventInternal = 31 -> Microsoft.CodeAnalysis.Glyph
Microsoft.CodeAnalysis.Glyph.EventPrivate = 30 -> Microsoft.CodeAnalysis.Glyph
Microsoft.CodeAnalysis.Glyph.EventProtected = 29 -> Microsoft.CodeAnalysis.Glyph
Microsoft.CodeAnalysis.Glyph.EventPublic = 28 -> Microsoft.CodeAnalysis.Glyph
Microsoft.CodeAnalysis.Glyph.ExtensionMethodInternal = 35 -> Microsoft.CodeAnalysis.Glyph
Microsoft.CodeAnalysis.Glyph.ExtensionMethodPrivate = 34 -> Microsoft.CodeAnalysis.Glyph
Microsoft.CodeAnalysis.Glyph.ExtensionMethodProtected = 33 -> Microsoft.CodeAnalysis.Glyph
Microsoft.CodeAnalysis.Glyph.ExtensionMethodPublic = 32 -> Microsoft.CodeAnalysis.Glyph
Microsoft.CodeAnalysis.Glyph.FieldInternal = 39 -> Microsoft.CodeAnalysis.Glyph
Microsoft.CodeAnalysis.Glyph.FieldPrivate = 38 -> Microsoft.CodeAnalysis.Glyph
Microsoft.CodeAnalysis.Glyph.FieldProtected = 37 -> Microsoft.CodeAnalysis.Glyph
Microsoft.CodeAnalysis.Glyph.FieldPublic = 36 -> Microsoft.CodeAnalysis.Glyph
Microsoft.CodeAnalysis.Glyph.InterfaceInternal = 43 -> Microsoft.CodeAnalysis.Glyph
Microsoft.CodeAnalysis.Glyph.InterfacePrivate = 42 -> Microsoft.CodeAnalysis.Glyph
Microsoft.CodeAnalysis.Glyph.InterfaceProtected = 41 -> Microsoft.CodeAnalysis.Glyph
Microsoft.CodeAnalysis.Glyph.InterfacePublic = 40 -> Microsoft.CodeAnalysis.Glyph
Microsoft.CodeAnalysis.Glyph.Intrinsic = 44 -> Microsoft.CodeAnalysis.Glyph
Microsoft.CodeAnalysis.Glyph.Keyword = 45 -> Microsoft.CodeAnalysis.Glyph
Microsoft.CodeAnalysis.Glyph.Label = 46 -> Microsoft.CodeAnalysis.Glyph
Microsoft.CodeAnalysis.Glyph.Local = 47 -> Microsoft.CodeAnalysis.Glyph
Microsoft.CodeAnalysis.Glyph.MethodInternal = 52 -> Microsoft.CodeAnalysis.Glyph
Microsoft.CodeAnalysis.Glyph.MethodPrivate = 51 -> Microsoft.CodeAnalysis.Glyph
Microsoft.CodeAnalysis.Glyph.MethodProtected = 50 -> Microsoft.CodeAnalysis.Glyph
Microsoft.CodeAnalysis.Glyph.MethodPublic = 49 -> Microsoft.CodeAnalysis.Glyph
Microsoft.CodeAnalysis.Glyph.ModuleInternal = 56 -> Microsoft.CodeAnalysis.Glyph
Microsoft.CodeAnalysis.Glyph.ModulePrivate = 55 -> Microsoft.CodeAnalysis.Glyph
Microsoft.CodeAnalysis.Glyph.ModuleProtected = 54 -> Microsoft.CodeAnalysis.Glyph
Microsoft.CodeAnalysis.Glyph.ModulePublic = 53 -> Microsoft.CodeAnalysis.Glyph
Microsoft.CodeAnalysis.Glyph.Namespace = 48 -> Microsoft.CodeAnalysis.Glyph
Microsoft.CodeAnalysis.Glyph.None = 0 -> Microsoft.CodeAnalysis.Glyph
Microsoft.CodeAnalysis.Glyph.NuGet = 74 -> Microsoft.CodeAnalysis.Glyph
Microsoft.CodeAnalysis.Glyph.OpenFolder = 57 -> Microsoft.CodeAnalysis.Glyph
Microsoft.CodeAnalysis.Glyph.Operator = 58 -> Microsoft.CodeAnalysis.Glyph
Microsoft.CodeAnalysis.Glyph.Parameter = 59 -> Microsoft.CodeAnalysis.Glyph
Microsoft.CodeAnalysis.Glyph.PropertyInternal = 63 -> Microsoft.CodeAnalysis.Glyph
Microsoft.CodeAnalysis.Glyph.PropertyPrivate = 62 -> Microsoft.CodeAnalysis.Glyph
Microsoft.CodeAnalysis.Glyph.PropertyProtected = 61 -> Microsoft.CodeAnalysis.Glyph
Microsoft.CodeAnalysis.Glyph.PropertyPublic = 60 -> Microsoft.CodeAnalysis.Glyph
Microsoft.CodeAnalysis.Glyph.RangeVariable = 64 -> Microsoft.CodeAnalysis.Glyph
Microsoft.CodeAnalysis.Glyph.Reference = 65 -> Microsoft.CodeAnalysis.Glyph
Microsoft.CodeAnalysis.Glyph.Snippet = 71 -> Microsoft.CodeAnalysis.Glyph
Microsoft.CodeAnalysis.Glyph.StatusInformation = 27 -> Microsoft.CodeAnalysis.Glyph
Microsoft.CodeAnalysis.Glyph.StructureInternal = 69 -> Microsoft.CodeAnalysis.Glyph
Microsoft.CodeAnalysis.Glyph.StructurePrivate = 68 -> Microsoft.CodeAnalysis.Glyph
Microsoft.CodeAnalysis.Glyph.StructureProtected = 67 -> Microsoft.CodeAnalysis.Glyph
Microsoft.CodeAnalysis.Glyph.StructurePublic = 66 -> Microsoft.CodeAnalysis.Glyph
Microsoft.CodeAnalysis.Glyph.TypeParameter = 70 -> Microsoft.CodeAnalysis.Glyph
Microsoft.CodeAnalysis.NavigateTo.INavigateToSearchResult
Microsoft.CodeAnalysis.NavigateTo.INavigateToSearchResult.AdditionalInformation.get -> string
Microsoft.CodeAnalysis.NavigateTo.INavigateToSearchResult.IsCaseSensitive.get -> bool
Microsoft.CodeAnalysis.NavigateTo.INavigateToSearchResult.Kind.get -> string
Microsoft.CodeAnalysis.NavigateTo.INavigateToSearchResult.MatchKind.get -> Microsoft.CodeAnalysis.NavigateTo.NavigateToMatchKind
Microsoft.CodeAnalysis.NavigateTo.INavigateToSearchResult.Name.get -> string
Microsoft.CodeAnalysis.NavigateTo.INavigateToSearchResult.NameMatchSpans.get -> System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Text.TextSpan>
Microsoft.CodeAnalysis.NavigateTo.INavigateToSearchResult.NavigableItem.get -> Microsoft.CodeAnalysis.Navigation.INavigableItem
Microsoft.CodeAnalysis.NavigateTo.INavigateToSearchResult.SecondarySort.get -> string
Microsoft.CodeAnalysis.NavigateTo.INavigateToSearchResult.Summary.get -> string
Microsoft.CodeAnalysis.NavigateTo.INavigateToSearchService
Microsoft.CodeAnalysis.NavigateTo.INavigateToSearchService.SearchDocumentAsync(Microsoft.CodeAnalysis.Document document, string searchPattern, System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.Task<System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.NavigateTo.INavigateToSearchResult>>
Microsoft.CodeAnalysis.NavigateTo.INavigateToSearchService.SearchProjectAsync(Microsoft.CodeAnalysis.Project project, string searchPattern, System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.Task<System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.NavigateTo.INavigateToSearchResult>>
Microsoft.CodeAnalysis.NavigateTo.INavigateToSearchService_RemoveInterfaceAboveAndRenameThisAfterInternalsVisibleToUsersUpdate
Microsoft.CodeAnalysis.NavigateTo.INavigateToSearchService_RemoveInterfaceAboveAndRenameThisAfterInternalsVisibleToUsersUpdate.CanFilter.get -> bool
Microsoft.CodeAnalysis.NavigateTo.INavigateToSearchService_RemoveInterfaceAboveAndRenameThisAfterInternalsVisibleToUsersUpdate.KindsProvided.get -> System.Collections.Immutable.IImmutableSet<string>
Microsoft.CodeAnalysis.NavigateTo.INavigateToSearchService_RemoveInterfaceAboveAndRenameThisAfterInternalsVisibleToUsersUpdate.SearchDocumentAsync(Microsoft.CodeAnalysis.Document document, string searchPattern, System.Collections.Immutable.IImmutableSet<string> kinds, System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.Task<System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.NavigateTo.INavigateToSearchResult>>
Microsoft.CodeAnalysis.NavigateTo.INavigateToSearchService_RemoveInterfaceAboveAndRenameThisAfterInternalsVisibleToUsersUpdate.SearchProjectAsync(Microsoft.CodeAnalysis.Project project, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Document> priorityDocuments, string searchPattern, System.Collections.Immutable.IImmutableSet<string> kinds, System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.Task<System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.NavigateTo.INavigateToSearchResult>>
Microsoft.CodeAnalysis.NavigateTo.NavigateToMatchKind
Microsoft.CodeAnalysis.NavigateTo.NavigateToMatchKind.CamelCaseExact = 5 -> Microsoft.CodeAnalysis.NavigateTo.NavigateToMatchKind
Microsoft.CodeAnalysis.NavigateTo.NavigateToMatchKind.CamelCaseNonContiguousPrefix = 7 -> Microsoft.CodeAnalysis.NavigateTo.NavigateToMatchKind
Microsoft.CodeAnalysis.NavigateTo.NavigateToMatchKind.CamelCaseNonContiguousSubstring = 9 -> Microsoft.CodeAnalysis.NavigateTo.NavigateToMatchKind
Microsoft.CodeAnalysis.NavigateTo.NavigateToMatchKind.CamelCasePrefix = 6 -> Microsoft.CodeAnalysis.NavigateTo.NavigateToMatchKind
Microsoft.CodeAnalysis.NavigateTo.NavigateToMatchKind.CamelCaseSubstring = 8 -> Microsoft.CodeAnalysis.NavigateTo.NavigateToMatchKind
Microsoft.CodeAnalysis.NavigateTo.NavigateToMatchKind.Exact = 0 -> Microsoft.CodeAnalysis.NavigateTo.NavigateToMatchKind
Microsoft.CodeAnalysis.NavigateTo.NavigateToMatchKind.Fuzzy = 10 -> Microsoft.CodeAnalysis.NavigateTo.NavigateToMatchKind
Microsoft.CodeAnalysis.NavigateTo.NavigateToMatchKind.None = 4 -> Microsoft.CodeAnalysis.NavigateTo.NavigateToMatchKind
Microsoft.CodeAnalysis.NavigateTo.NavigateToMatchKind.Prefix = 1 -> Microsoft.CodeAnalysis.NavigateTo.NavigateToMatchKind
Microsoft.CodeAnalysis.NavigateTo.NavigateToMatchKind.Regular = 3 -> Microsoft.CodeAnalysis.NavigateTo.NavigateToMatchKind
Microsoft.CodeAnalysis.NavigateTo.NavigateToMatchKind.Substring = 2 -> Microsoft.CodeAnalysis.NavigateTo.NavigateToMatchKind
Microsoft.CodeAnalysis.Navigation.INavigableItem
Microsoft.CodeAnalysis.Navigation.INavigableItem.ChildItems.get -> System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Navigation.INavigableItem>
Microsoft.CodeAnalysis.Navigation.INavigableItem.DisplayFileLocation.get -> bool
Microsoft.CodeAnalysis.Navigation.INavigableItem.DisplayTaggedParts.get -> System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.TaggedText>
Microsoft.CodeAnalysis.Navigation.INavigableItem.Document.get -> Microsoft.CodeAnalysis.Document
Microsoft.CodeAnalysis.Navigation.INavigableItem.Glyph.get -> Microsoft.CodeAnalysis.Glyph
Microsoft.CodeAnalysis.Navigation.INavigableItem.IsImplicitlyDeclared.get -> bool
Microsoft.CodeAnalysis.Navigation.INavigableItem.SourceSpan.get -> Microsoft.CodeAnalysis.Text.TextSpan
abstract Microsoft.CodeAnalysis.FindUsages.DefinitionItem.CanNavigateTo(Microsoft.CodeAnalysis.Workspace workspace) -> bool
abstract Microsoft.CodeAnalysis.FindUsages.DefinitionItem.TryNavigateTo(Microsoft.CodeAnalysis.Workspace workspace, bool isPreview) -> bool
override Microsoft.CodeAnalysis.DocumentSpan.Equals(object obj) -> bool
override Microsoft.CodeAnalysis.DocumentSpan.GetHashCode() -> int
static Microsoft.CodeAnalysis.Completion.CompletionItem.Create(string displayText, string filterText, string sortText, System.Collections.Immutable.ImmutableDictionary<string, string> properties, System.Collections.Immutable.ImmutableArray<string> tags, Microsoft.CodeAnalysis.Completion.CompletionItemRules rules) -> Microsoft.CodeAnalysis.Completion.CompletionItem
static Microsoft.CodeAnalysis.DocumentSpan.operator !=(Microsoft.CodeAnalysis.DocumentSpan d1, Microsoft.CodeAnalysis.DocumentSpan d2) -> bool
static Microsoft.CodeAnalysis.DocumentSpan.operator ==(Microsoft.CodeAnalysis.DocumentSpan d1, Microsoft.CodeAnalysis.DocumentSpan d2) -> bool
Microsoft.CodeAnalysis.QuickInfo.QuickInfoItem
Microsoft.CodeAnalysis.QuickInfo.QuickInfoItem.RelatedSpans.get -> System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Text.TextSpan>
Microsoft.CodeAnalysis.QuickInfo.QuickInfoItem.Sections.get -> System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.QuickInfo.QuickInfoSection>
Microsoft.CodeAnalysis.QuickInfo.QuickInfoItem.Span.get -> Microsoft.CodeAnalysis.Text.TextSpan
Microsoft.CodeAnalysis.QuickInfo.QuickInfoItem.Tags.get -> System.Collections.Immutable.ImmutableArray<string>
Microsoft.CodeAnalysis.QuickInfo.QuickInfoSection
Microsoft.CodeAnalysis.QuickInfo.QuickInfoSection.Kind.get -> string
Microsoft.CodeAnalysis.QuickInfo.QuickInfoSection.TaggedParts.get -> System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.TaggedText>
Microsoft.CodeAnalysis.QuickInfo.QuickInfoSection.Text.get -> string
Microsoft.CodeAnalysis.QuickInfo.QuickInfoSectionKinds
Microsoft.CodeAnalysis.QuickInfo.QuickInfoService
Microsoft.CodeAnalysis.QuickInfo.QuickInfoService.QuickInfoService() -> void
static Microsoft.CodeAnalysis.Completion.CompletionItem.Create(string displayText, string filterText = null, string sortText = null, System.Collections.Immutable.ImmutableDictionary<string, string> properties = null, System.Collections.Immutable.ImmutableArray<string> tags = default(System.Collections.Immutable.ImmutableArray<string>), Microsoft.CodeAnalysis.Completion.CompletionItemRules rules = null, string displayTextPrefix = null, string displayTextSuffix = null, string inlineDescription = null) -> Microsoft.CodeAnalysis.Completion.CompletionItem
static Microsoft.CodeAnalysis.Completion.CompletionItem.Create(string displayText, string filterText, string sortText, System.Collections.Immutable.ImmutableDictionary<string, string> properties, System.Collections.Immutable.ImmutableArray<string> tags, Microsoft.CodeAnalysis.Completion.CompletionItemRules rules, string displayTextPrefix, string displayTextSuffix) -> Microsoft.CodeAnalysis.Completion.CompletionItem
static Microsoft.CodeAnalysis.QuickInfo.QuickInfoItem.Create(Microsoft.CodeAnalysis.Text.TextSpan span, System.Collections.Immutable.ImmutableArray<string> tags = default(System.Collections.Immutable.ImmutableArray<string>), System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.QuickInfo.QuickInfoSection> sections = default(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.QuickInfo.QuickInfoSection>), System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Text.TextSpan> relatedSpans = default(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Text.TextSpan>)) -> Microsoft.CodeAnalysis.QuickInfo.QuickInfoItem
static Microsoft.CodeAnalysis.QuickInfo.QuickInfoSection.Create(string kind, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.TaggedText> taggedParts) -> Microsoft.CodeAnalysis.QuickInfo.QuickInfoSection
static Microsoft.CodeAnalysis.QuickInfo.QuickInfoService.GetService(Microsoft.CodeAnalysis.Document document) -> Microsoft.CodeAnalysis.QuickInfo.QuickInfoService
static Microsoft.CodeAnalysis.Structure.BlockStructureService.GetService(Microsoft.CodeAnalysis.Document document) -> Microsoft.CodeAnalysis.Structure.BlockStructureService
virtual Microsoft.CodeAnalysis.QuickInfo.QuickInfoService.GetQuickInfoAsync(Microsoft.CodeAnalysis.Document document, int position, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<Microsoft.CodeAnalysis.QuickInfo.QuickInfoItem>
virtual Microsoft.CodeAnalysis.Structure.BlockStructureService.GetBlockStructure(Microsoft.CodeAnalysis.Document document, System.Threading.CancellationToken cancellationToken) -> Microsoft.CodeAnalysis.Structure.BlockStructure
